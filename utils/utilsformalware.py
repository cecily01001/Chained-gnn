from pathlib import Path
from scapy.layers.dns import DNS
from scapy.layers.inet import TCP
from scapy.packet import Padding
from scapy.utils import rdpcap
PREFIX_TO_Malware_ID = {
    # 'Trojan-FKME': 0,
    # 'Worm': 1,
    # 'Exploit': 2,
    # 'Packed': 3,
    # 'Artemis': 4,
    # 'Emotet': 5,
    'Artemis': 0,
    'Emotet': 1,
    'Exploit': 2,
    'Packed': 3,
    'Trojan-FKME': 4,
    'Worm': 5,
}

ID_TO_APP = {
    # 0:'Trojan-FKME',
    # 1:'Worm',
    # 2:'Exploit',
    # 3:'Packed',
    # 4:'Artemis',
    # 5:'Emotet',
    0:'Artemis',
    1:'Emotet',
    2:'Exploit',
    3:'Packed',
    4:'Trojan-FKME',
    5:'Worm',
}
def read_pcap(path: Path):
    packets = rdpcap(str(path))

    return packets


def should_omit_packet(packet):
    # SYN, ACK or FIN flags set to 1 and no payload
    if TCP in packet and (packet.flags & 0x13):
        # not payload or contains only padding
        layers = packet[TCP].payload.layers()
        if not layers or (Padding in layers and len(layers) == 1):
            return True

    # DNS segment
    if DNS in packet:
        return True

    return False
